var mongoose = require('mongoose'),
Schema = mongoose.Schema;

var FluxSchema = new Schema({
    year: { type: Number },
    day: { type: Number },
    time: { type: Number },
    Hs: { type: Number },
    tau: { type: Number },
    u_star: { type: Number },
    Ts_stdev: { type: Number },
    Ts_Ux_cov: { type: Number },
    Ts_Uy_cov: { type: Number },
    Ts_Uz_cov: { type: Number },
    Ux_stdev: { type: Number },
    Ux_Uy_cov: { type: Number },
    Ux_Uz_cov: { type: Number },
    Uy_stdev: { type: Number },
    Uy_Uz_cov: { type: Number },
    Uz_stdev: { type: Number },
    wnd_spd: { type: Number },
    rslt_wnd_spd: { type: Number },
    wnd_dir_sonic: { type: Number },
    std_wnd_dir: { type: Number },
    wnd_dir_compass: { type: Number },
    Ux_Avg: { type: Number },
    Uy_Avg: { type: Number },
    Uz_Avg: { type: Number },
    Ts_Avg: { type: Number },
    sonic_azimuth: { type: Number },
    sonic_samples_Tot: { type: Number },
    no_sonic_head_Tot: { type: Number },
    no_new_sonic_data_Tot: { type: Number },
    amp_l_f_Tot: { type: Number },
    amp_h_f_Tot: { type: Number },
    sig_lck_f_Tot: { type: Number },
    del_T_f_Tot: { type: Number },
    aq_sig_f_Tot: { type: Number },
    sonic_cal_err_f_Tot: { type: Number },
    Fc_wpl: { type: Number },
    LE_wpl: { type: Number },
    Hc: { type: Number },
    CO2_stdev: { type: Number },
    CO2_Ux_cov: { type: Number },
    CO2_Uy_cov: { type: Number },
    CO2_Uz_cov: { type: Number },
    H2O_stdev: { type: Number },
    H2O_Ux_cov: { type: Number },
    H2O_Uy_cov: { type: Number },
    H2O_Uz_cov: { type: Number },
    Tc_stdev: { type: Number },
    Tc_Ux_cov: { type: Number },
    Tc_Uy_cov: { type: Number },
    Tc_Uz_cov: { type: Number },
    CO2_mean: { type: Number },
    H2O_mean: { type: Number },
    amb_tmpr_Avg: { type: Number },
    amb_press_mean: { type: Number },
    Tc_mean: { type: Number },
    rho_a_mean: { type: Number },
    Fc_irga: { type: Number },
    LE_irga: { type: Number },
    CO2_wpl_LE: { type: Number },
    CO2_wpl_H: { type: Number },
    H2O_wpl_LE: { type: Number },
    H2O_wpl_H: { type: Number },
    irga_samples_Tot: { type: Number },
    no_irga_head_Tot: { type: Number },
    no_new_irga_data_Tot: { type: Number },
    irga_bad_data_f_Tot: { type: Number },
    gen_sys_fault_f_Tot: { type: Number },
    sys_startup_f_Tot: { type: Number },
    motor_spd_f_Tot: { type: Number },
    tec_tmpr_f_Tot: { type: Number },
    src_pwr_f_Tot: { type: Number },
    src_tmpr_f_Tot: { type: Number },
    src_curr_f_Tot: { type: Number },
    irga_off_f_Tot: { type: Number },
    irga_sync_f_Tot: { type: Number },
    amb_tmpr_f_Tot: { type: Number },
    amb_press_f_Tot: { type: Number },
    CO2_I_f_Tot: { type: Number },
    CO2_Io_f_Tot: { type: Number },
    H2O_I_f_Tot: { type: Number },
    H2O_Io_f_Tot: { type: Number },
    CO2_Io_var_f_Tot: { type: Number },
    H2O_Io_var_f_Tot: { type: Number },
    CO2_sig_strgth_f_Tot: { type: Number },
    H2O_sig_strgth_f_Tot: { type: Number },
    CO2_sig_strgth_mean: { type: Number },
    H2O_sig_strgth_mean: { type: Number },
    T_tmpr_rh_mean: { type: Number },
    e_tmpr_rh_mean: { type: Number },
    e_sat_tmpr_rh_mean: { type: Number },
    H2O_tmpr_rh_mean: { type: Number },
    RH_tmpr_rh_mean: { type: Number },
    rho_a_tmpr_rh_mean: { type: Number },
    Rn_Avg: { type: Number },
    Rn_meas_Avg: { type: Number },
    Rain_TE525_Tot: { type: Number },
    LWS_mV_Avg: { type: Number },
    LWS_mV_Max: { type: Number },
    LWS_mV_Min: { type: Number },
    WetSeconds: { type: Number },
    WindSpd_WXT_mean: { type: Number },
    WindDir_WXT_mean: { type: Number },
    WindDir_WXT_StdDev: { type: Number },
    AirTemp_WXT_Avg: { type: Number },
    RH_WXT: { type: Number },
    AirPress_WXT: { type: Number },
    Rain_WXT_Tot: { type: Number },
    Hits_WXT_Tot: { type: Number },
    PAR_Den_Avg: { type: Number },
    PAR_Tot_Tot: { type: Number },
    panel_tmpr_Avg: { type: Number },
    batt_volt_Avg: { type: Number },
    slowsequence_Tot: { type: Number }
},{strict: false, collection: 'fluxdata'});

module.exports = FluxSchema;
